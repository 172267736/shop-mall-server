<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shop.mall.center.dao.GoodsClassifyDao">

    <insert id="save" keyColumn="unique_id" keyProperty="uniqueId"
            parameterType="cn.shop.mall.center.entity.GoodsClassifyEntity"
            useGeneratedKeys="true">
        insert into goods_classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classifyName != null">
                classify_name,
            </if>
            <if test="classifyParentId != null">
                classify_parent_id,
            </if>
            <if test="classifyIcon != null">
                classify_icon,
            </if>
            <if test="classifyDescription != null">
                classify_description,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classifyName != null">
                #{classifyName},
            </if>
            <if test="classifyParentId != null">
                #{classifyParentId},
            </if>
            <if test="classifyIcon != null">
                #{classifyIcon},
            </if>
            <if test="classifyDescription != null">
                #{classifyDescription},
            </if>
            <if test="deleted != null">
                #{deleted},
            </if>
            <if test="createDate != null">
                #{createDate},
            </if>
            <if test="updateDate != null">
                #{updateDate},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="cn.shop.mall.center.entity.GoodsClassifyEntity">
        update goods_classify
        <set>
            <if test="classifyName != null">
                classify_name = #{classifyName},
            </if>
            <if test="classifyParentId != null">
                classify_parent_id = #{classifyParentId},
            </if>
            <if test="classifyIcon != null">
                classify_icon = #{classifyIcon},
            </if>
            <if test="classifyDescription != null">
                classify_description = #{classifyDescription},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </set>
        where unique_id = #{uniqueId}
    </update>

    <select id="getById" resultType="cn.shop.mall.center.entity.GoodsClassifyEntity">
        select * from goods_classify where deleted = 0 and unique_id = #{uniqueId}
    </select>

    <select id="getByParentId" resultType="cn.shop.mall.center.entity.GoodsClassifyEntity">
        select * from goods_classify where deleted = 0 and classify_parent_id = #{classifyParentId}
    </select>

    <select id="listAll" resultType="cn.shop.mall.center.entity.GoodsClassifyEntity">
        select a.*,a.classify_name as name,(select b.classify_name from goods_classify as b where b.unique_id = a.classify_parent_id) as classifyParentName from goods_classify as a where a.deleted = 0
    </select>

    <select id="list" resultType="cn.shop.mall.center.entity.GoodsClassifyEntity">
        select
            a.*,
            (select b.classify_name from goods_classify as b where b.unique_id = a.classify_parent_id) as classifyParentName
        from
            goods_classify as a
        <where>
            <if test="true">
                and a.deleted = 0
            </if>
            <if test="classifyName != null and classifyName != ''">
                and a.classify_name like concat('%', #{classifyName}, '%')
            </if>
        </where>
        order by a.create_date desc
        limit #{offset},#{limit}
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(1) from goods_classify
        <where>
            <if test="true">
                and deleted = 0
            </if>
            <if test="classifyName != null and classifyName != ''">
                and classify_name like concat('%', #{classifyName}, '%')
            </if>
        </where>
    </select>
</mapper>